// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Adoption", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AdoptionRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AdoptionResponseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AnimalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pendiente");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("Adoptions");

                    b.HasData(
                        new
                        {
                            Id = "adoption-1",
                            AdoptionRequestDate = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "1",
                            Description = "Interesada en adoptar a Firulais. Tengo experiencia con perros.",
                            State = "Pendiente",
                            UserId = "user-2"
                        },
                        new
                        {
                            Id = "adoption-2",
                            AdoptionRequestDate = new DateTime(2024, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdoptionResponseDate = new DateTime(2024, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "2",
                            Description = "Solicitud aprobada. El gato ya se encuentra en su nuevo hogar.",
                            State = "Aprobada",
                            UserId = "user-5"
                        },
                        new
                        {
                            Id = "adoption-3",
                            AdoptionRequestDate = new DateTime(2024, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdoptionResponseDate = new DateTime(2024, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "3",
                            Description = "No cuenta con espacio adecuado para conejos.",
                            State = "Rechazada",
                            UserId = "user-6"
                        },
                        new
                        {
                            Id = "adoption-4",
                            AdoptionRequestDate = new DateTime(2024, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "6",
                            Description = "Familia con niños pequeños, buscan un conejo tranquilo.",
                            State = "Pendiente",
                            UserId = "user-7"
                        },
                        new
                        {
                            Id = "adoption-5",
                            AdoptionRequestDate = new DateTime(2024, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "1",
                            Description = "Vivo sola y trabajo desde casa. Puedo darle mucho tiempo y atención.",
                            State = "Pendiente",
                            UserId = "user-8"
                        },
                        new
                        {
                            Id = "adoption-6",
                            AdoptionRequestDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdoptionResponseDate = new DateTime(2024, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "2",
                            Description = "Primera solicitud rechazada por falta de documentación.",
                            State = "Rechazada",
                            UserId = "user-2"
                        },
                        new
                        {
                            Id = "adoption-7",
                            AdoptionRequestDate = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "9",
                            Description = "Cree tener espacio adecuado.",
                            State = "Pendiente",
                            UserId = "user-9"
                        },
                        new
                        {
                            Id = "adoption-8",
                            AdoptionRequestDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdoptionResponseDate = new DateTime(2024, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "10",
                            Description = "Solicitud aprobada tras verificación.",
                            State = "Aprobada",
                            UserId = "user-10"
                        },
                        new
                        {
                            Id = "adoption-9",
                            AdoptionRequestDate = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "14",
                            Description = "Estoy interesada en cuidar a Nieve, somos una familia muy cariñosa.",
                            State = "Pendiente",
                            UserId = "user-6"
                        },
                        new
                        {
                            Id = "adoption-10",
                            AdoptionRequestDate = new DateTime(2025, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AdoptionResponseDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            AnimalId = "17",
                            Description = "El hogar no cumple las condiciones  necesarias para acoger aves.",
                            State = "Rechazada",
                            UserId = "user-7"
                        });
                });

            modelBuilder.Entity("Domain.Animal", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnimalState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2018, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Perro mestizo de tamaño mediano, pelaje corto marrón con pecho blanco. Muy amistoso con las personas y tranquilo en los paseos.",
                            Name = "Firulais",
                            Species = "Perro"
                        },
                        new
                        {
                            Id = "2",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gato adulto de color gris atigrado, ojos verdes y carácter dulce. Se adaptó muy bien a su nuevo hogar.",
                            Name = "Miau",
                            Species = "Gato",
                            UserId = "user-5"
                        },
                        new
                        {
                            Id = "3",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conejo blanco con manchas grises, muy curioso y dócil. Le gusta saltar y explorar los rincones del lugar.",
                            Name = "Bunny",
                            Species = "Conejo"
                        },
                        new
                        {
                            Id = "4",
                            AnimalState = "BajoCuidado",
                            BirthDate = new DateTime(2019, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gata de pelo negro brillante, muy observadora y tranquila. Fue rescatada de la calle y actualmente está en recuperación.",
                            Name = "Lola",
                            Species = "Gato",
                            UserId = "user-4"
                        },
                        new
                        {
                            Id = "5",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2017, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Perro grande de color beige con orejas caídas. Protector, paciente con niños y muy fiel a su adoptante.",
                            Name = "Rex",
                            Species = "Perro",
                            UserId = "user-2"
                        },
                        new
                        {
                            Id = "6",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conejo marrón oscuro de orejas largas, enérgico y juguetón. Se asusta fácilmente pero es muy curioso.",
                            Name = "Coco",
                            Species = "Conejo"
                        },
                        new
                        {
                            Id = "7",
                            AnimalState = "BajoCuidado",
                            BirthDate = new DateTime(2016, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Canario macho de plumaje amarillo intenso. Alegre, canta todos los días y se muestra muy sociable.",
                            Name = "Pepi",
                            Species = "Pajaro",
                            UserId = "user-3"
                        },
                        new
                        {
                            Id = "8",
                            AnimalState = "BajoCuidado",
                            BirthDate = new DateTime(2019, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Perro mestizo color negro con patas blancas. Fue rescatado del abandono, ahora está recuperando peso y confianza.",
                            Name = "Toby",
                            Species = "Perro",
                            UserId = "user-14"
                        },
                        new
                        {
                            Id = "9",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2020, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Cachorra de tamaño mediano, pelaje dorado y ojos claros. Muy activa y juguetona, ideal para una familia con espacio.",
                            Name = "Luna",
                            Species = "Perro"
                        },
                        new
                        {
                            Id = "10",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2017, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Perro de pelaje oscuro, fuerte y leal. Se muestra protector y siempre atento a su entorno.",
                            Name = "Rocky",
                            Species = "Perro",
                            UserId = "user-7"
                        },
                        new
                        {
                            Id = "11",
                            AnimalState = "BajoCuidado",
                            BirthDate = new DateTime(2021, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gato de pelo blanco y gris, ojos celestes. Muy mimoso y busca compañía humana constantemente.",
                            Name = "Simón",
                            Species = "Gato",
                            UserId = "user-12"
                        },
                        new
                        {
                            Id = "12",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gatita joven de color marrón claro con manchas blancas. Un poco tímida al principio, pero muy cariñosa cuando toma confianza.",
                            Name = "Misha",
                            Species = "Gato"
                        },
                        new
                        {
                            Id = "13",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2019, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gata atigrada de pelaje dorado. Activa, curiosa y siempre lista para jugar.",
                            Name = "Tigra",
                            Species = "Gato",
                            UserId = "user-9"
                        },
                        new
                        {
                            Id = "14",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coneja completamente blanca, de pelaje suave. Tranquila, le gusta estar en brazos y es muy limpia.",
                            Name = "Nieve",
                            Species = "Conejo"
                        },
                        new
                        {
                            Id = "15",
                            AnimalState = "BajoCuidado",
                            BirthDate = new DateTime(2022, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conejo marrón claro de orejas cortas. Muy sociable con otros conejos y disfruta de la compañía humana.",
                            Name = "Choco",
                            Species = "Conejo",
                            UserId = "user-15"
                        },
                        new
                        {
                            Id = "16",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Coneja de color gris claro, muy sociable y tranquila. Le encanta recibir caricias y estar al aire libre.",
                            Name = "Lili",
                            Species = "Conejo",
                            UserId = "user-6"
                        },
                        new
                        {
                            Id = "17",
                            AnimalState = "BajoCuidado",
                            BirthDate = new DateTime(2020, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pájaro pequeño de tonos azules y verdes. Tiene un canto melodioso y disfruta del contacto visual con las personas.",
                            Name = "Azul",
                            Species = "Pajaro",
                            UserId = "user-13"
                        },
                        new
                        {
                            Id = "18",
                            AnimalState = "ARevisar",
                            BirthDate = new DateTime(2023, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Polluelo color amarillo claro, encontrado en la vía pública. Está en observación hasta completar su desarrollo.",
                            Name = "Sol",
                            Species = "Pajaro"
                        },
                        new
                        {
                            Id = "19",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2022, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pájaro pequeño de plumaje verde brillante, recuperado tras una lesión en el ala. Ahora vuela y canta normalmente.",
                            Name = "Kiwi",
                            Species = "Pajaro",
                            UserId = "user-11"
                        });
                });

            modelBuilder.Entity("Domain.History.AnimalResponsibleHistory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnimalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResponsibleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ResponsibleId");

                    b.ToTable("AnimalResponsibleHistories");

                    b.HasData(
                        new
                        {
                            Id = "arh-1",
                            AnimalId = "2",
                            AssignedDate = new DateTime(2023, 12, 15, 14, 35, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-2"
                        },
                        new
                        {
                            Id = "arh-2",
                            AnimalId = "2",
                            AssignedDate = new DateTime(2024, 3, 20, 10, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-6"
                        },
                        new
                        {
                            Id = "arh-3",
                            AnimalId = "2",
                            AssignedDate = new DateTime(2024, 10, 8, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-5"
                        },
                        new
                        {
                            Id = "arh-4",
                            AnimalId = "5",
                            AssignedDate = new DateTime(2024, 2, 10, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-7"
                        },
                        new
                        {
                            Id = "arh-5",
                            AnimalId = "5",
                            AssignedDate = new DateTime(2024, 7, 20, 17, 46, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-2"
                        },
                        new
                        {
                            Id = "arh-6",
                            AnimalId = "4",
                            AssignedDate = new DateTime(2024, 4, 5, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-3"
                        },
                        new
                        {
                            Id = "arh-7",
                            AnimalId = "4",
                            AssignedDate = new DateTime(2024, 6, 12, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-8"
                        },
                        new
                        {
                            Id = "arh-8",
                            AnimalId = "4",
                            AssignedDate = new DateTime(2024, 8, 15, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-4"
                        },
                        new
                        {
                            Id = "arh-9",
                            AnimalId = "7",
                            AssignedDate = new DateTime(2024, 1, 25, 14, 10, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-6"
                        },
                        new
                        {
                            Id = "arh-10",
                            AnimalId = "7",
                            AssignedDate = new DateTime(2024, 9, 10, 15, 35, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-3"
                        },
                        new
                        {
                            Id = "arh-11",
                            AnimalId = "1",
                            AssignedDate = new DateTime(2023, 8, 10, 16, 15, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-5"
                        },
                        new
                        {
                            Id = "arh-12",
                            AnimalId = "1",
                            AssignedDate = new DateTime(2024, 1, 15, 14, 20, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-8"
                        },
                        new
                        {
                            Id = "arh-13",
                            AnimalId = "3",
                            AssignedDate = new DateTime(2024, 5, 8, 17, 10, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-7"
                        },
                        new
                        {
                            Id = "arh-14",
                            AnimalId = "8",
                            AssignedDate = new DateTime(2024, 2, 12, 13, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-14"
                        },
                        new
                        {
                            Id = "arh-15",
                            AnimalId = "15",
                            AssignedDate = new DateTime(2024, 8, 25, 16, 10, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-15"
                        },
                        new
                        {
                            Id = "arh-16",
                            AnimalId = "10",
                            AssignedDate = new DateTime(2024, 9, 18, 18, 15, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-16"
                        },
                        new
                        {
                            Id = "arh-17",
                            AnimalId = "17",
                            AssignedDate = new DateTime(2024, 10, 2, 14, 10, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-11"
                        },
                        new
                        {
                            Id = "arh-18",
                            AnimalId = "11",
                            AssignedDate = new DateTime(2025, 2, 10, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-12"
                        },
                        new
                        {
                            Id = "arh-19",
                            AnimalId = "16",
                            AssignedDate = new DateTime(2025, 3, 5, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            ResponsibleId = "user-6"
                        });
                });

            modelBuilder.Entity("Domain.House", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = "house-1",
                            Address = "Zeballos",
                            AddressNumber = 1341,
                            Capacity = 2,
                            UserId = "user-4"
                        },
                        new
                        {
                            Id = "house-2",
                            Address = "San Martín",
                            AddressNumber = 550,
                            Capacity = 3,
                            UserId = "user-14"
                        },
                        new
                        {
                            Id = "house-3",
                            Address = "Mitre",
                            AddressNumber = 200,
                            Capacity = 1,
                            UserId = "user-15"
                        },
                        new
                        {
                            Id = "house-4",
                            Address = "Dorrego",
                            AddressNumber = 900,
                            Capacity = 2,
                            UserId = "user-16"
                        });
                });

            modelBuilder.Entity("Domain.MedicalCheckUp", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnimalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CheckUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("MedicalCheckUps");

                    b.HasData(
                        new
                        {
                            Id = "mc-1",
                            AnimalId = "7",
                            CheckUpDate = new DateTime(2024, 11, 15, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Control de rutina. Vacunas al día. Estado general excelente."
                        },
                        new
                        {
                            Id = "mc-2",
                            AnimalId = "5",
                            CheckUpDate = new DateTime(2024, 10, 20, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Revisión post-adopción. El animal se ha adaptado bien. Se recomienda seguimiento en 3 meses."
                        },
                        new
                        {
                            Id = "mc-3",
                            AnimalId = "4",
                            CheckUpDate = new DateTime(2024, 12, 5, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Desparasitación realizada. Peso adecuado para su edad. Continuar con alimentación actual."
                        },
                        new
                        {
                            Id = "mc-4",
                            AnimalId = "1",
                            CheckUpDate = new DateTime(2024, 9, 10, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Control pre-adopción. Animal en condiciones óptimas para ser adoptado."
                        },
                        new
                        {
                            Id = "mc-5",
                            AnimalId = "2",
                            CheckUpDate = new DateTime(2024, 8, 25, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Revisión dental. Se detectó sarro leve. Se realizó limpieza. Buen estado general."
                        },
                        new
                        {
                            Id = "mc-6",
                            AnimalId = "8",
                            CheckUpDate = new DateTime(2024, 11, 30, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Vacunación completa, leve sobrepeso."
                        },
                        new
                        {
                            Id = "mc-7",
                            AnimalId = "10",
                            CheckUpDate = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Chequeo general, sin anomalías."
                        },
                        new
                        {
                            Id = "mc-8",
                            AnimalId = "11",
                            CheckUpDate = new DateTime(2024, 9, 5, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Tratamiento de pulgas realizado."
                        },
                        new
                        {
                            Id = "mc-9",
                            AnimalId = "13",
                            CheckUpDate = new DateTime(2025, 1, 3, 17, 45, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Control rutinario, en excelente estado."
                        },
                        new
                        {
                            Id = "mc-10",
                            AnimalId = "16",
                            CheckUpDate = new DateTime(2024, 10, 21, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Observation = "Revisión dental, sin problemas."
                        });
                });

            modelBuilder.Entity("Domain.Sighting", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SightingAddressName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SightingAddressNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SightingDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SightingDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Sightingstate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sightings");

                    b.HasData(
                        new
                        {
                            Id = "s1",
                            SightingAddressName = "Calle Falsa",
                            SightingAddressNumber = "123",
                            SightingDateTime = new DateTime(2025, 9, 25, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Avisté un perro corriendo solo",
                            Sightingstate = 0
                        },
                        new
                        {
                            Id = "s2",
                            SightingAddressName = "Av. Libertad",
                            SightingAddressNumber = "456",
                            SightingDateTime = new DateTime(2025, 9, 24, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Gato atrapado en un árbol, unos pibes le estaban tirando piedras, los cagué a trompadas pero no pude bajar al gato del árbol",
                            Sightingstate = 0
                        },
                        new
                        {
                            Id = "s3",
                            SightingAddressName = "Plaza Central",
                            SightingAddressNumber = "10",
                            SightingDateTime = new DateTime(2025, 9, 23, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Conejo perdido cerca del parque",
                            Sightingstate = 0
                        },
                        new
                        {
                            Id = "s4",
                            SightingAddressName = "Barrio Norte",
                            SightingAddressNumber = "2345",
                            SightingDateTime = new DateTime(2025, 9, 22, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Se ve un pájaro herido",
                            Sightingstate = 0
                        },
                        new
                        {
                            Id = "s5",
                            SightingAddressName = "Ruta 5",
                            SightingAddressNumber = "2000",
                            SightingDateTime = new DateTime(2025, 9, 21, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Avistamiento de perro callejero al borde de la ruta, pueden ser más de uno, pareciese tener crías",
                            Sightingstate = 0
                        },
                        new
                        {
                            Id = "s6",
                            SightingAddressName = "Av. San Juan",
                            SightingAddressNumber = "987",
                            SightingDateTime = new DateTime(2025, 10, 1, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Perro negro con collar rojo caminando solo.",
                            Sightingstate = 0
                        },
                        new
                        {
                            Id = "s7",
                            SightingAddressName = "Parque Sur",
                            SightingAddressNumber = "45",
                            SightingDateTime = new DateTime(2025, 10, 10, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            SightingDescription = "Gato blanco escondido entre arbustos, parece asustado.",
                            Sightingstate = 0
                        });
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "user-1",
                            Dni = "12345678",
                            Name = "UTN",
                            Password = "123",
                            SurName = "Rosario",
                            UserName = "utn",
                            UserStatus = "Active",
                            UserType = "Admin"
                        },
                        new
                        {
                            Id = "user-2",
                            Dni = "87654321",
                            Name = "Camila",
                            Password = "123",
                            SurName = "Stella",
                            UserName = "cami",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-5",
                            Dni = "33445566",
                            Name = "Martín",
                            Password = "123",
                            SurName = "González",
                            UserName = "martin",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-6",
                            Dni = "44556677",
                            Name = "Laura",
                            Password = "123",
                            SurName = "Fernández",
                            UserName = "laura",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-7",
                            Dni = "55667788",
                            Name = "Diego",
                            Password = "123",
                            SurName = "Rodríguez",
                            UserName = "diego",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-8",
                            Dni = "66778899",
                            Name = "Sofía",
                            Password = "123",
                            SurName = "López",
                            UserName = "sofia",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-9",
                            Dni = "77889900",
                            Name = "Valentina",
                            Password = "123",
                            SurName = "Moreno",
                            UserName = "valen",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-10",
                            Dni = "88990011",
                            Name = "Andrés",
                            Password = "123",
                            SurName = "Pérez",
                            UserName = "andres",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-3",
                            Dni = "44180117",
                            Name = "Ignacio",
                            Password = "123",
                            SurName = "Esteves",
                            UserName = "nacho",
                            UserStatus = "Active",
                            UserType = "Voluntario"
                        },
                        new
                        {
                            Id = "user-11",
                            Dni = "99112233",
                            Name = "Lucía",
                            Password = "123",
                            SurName = "Benítez",
                            UserName = "lucia",
                            UserStatus = "Active",
                            UserType = "Voluntario"
                        },
                        new
                        {
                            Id = "user-12",
                            Dni = "99223344",
                            Name = "Pedro",
                            Password = "123",
                            SurName = "Luna",
                            UserName = "pedro",
                            UserStatus = "Active",
                            UserType = "Voluntario"
                        },
                        new
                        {
                            Id = "user-13",
                            Dni = "99334455",
                            Name = "Marta",
                            Password = "123",
                            SurName = "Salas",
                            UserName = "marta",
                            UserStatus = "Active",
                            UserType = "Voluntario"
                        },
                        new
                        {
                            Id = "user-4",
                            Dni = "11223344",
                            Name = "Nicolás",
                            Password = "123",
                            SurName = "Salerno",
                            UserName = "niko",
                            UserStatus = "Active",
                            UserType = "Transito"
                        },
                        new
                        {
                            Id = "user-14",
                            Dni = "22334455",
                            Name = "Julieta",
                            Password = "123",
                            SurName = "Rossi",
                            UserName = "juli",
                            UserStatus = "Active",
                            UserType = "Transito"
                        },
                        new
                        {
                            Id = "user-15",
                            Dni = "33445577",
                            Name = "Federico",
                            Password = "123",
                            SurName = "Torres",
                            UserName = "fede",
                            UserStatus = "Active",
                            UserType = "Transito"
                        },
                        new
                        {
                            Id = "user-16",
                            Dni = "44557788",
                            Name = "Carla",
                            Password = "123",
                            SurName = "Mendez",
                            UserName = "carla",
                            UserStatus = "Active",
                            UserType = "Transito"
                        });
                });

            modelBuilder.Entity("Domain.Adoption", b =>
                {
                    b.HasOne("Domain.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Animal", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.History.AnimalResponsibleHistory", b =>
                {
                    b.HasOne("Domain.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.User", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Responsible");
                });

            modelBuilder.Entity("Domain.House", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.MedicalCheckUp", b =>
                {
                    b.HasOne("Domain.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });
#pragma warning restore 612, 618
        }
    }
}
