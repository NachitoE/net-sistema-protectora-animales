// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Animal", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnimalState")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AnimalState = "Disponible",
                            BirthDate = new DateTime(2018, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Como es el bichito",
                            Name = "Firulais",
                            Species = "Perro"
                        },
                        new
                        {
                            Id = "2",
                            AnimalState = "Disponible",
                            BirthDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Como es el bichito",
                            Name = "Miau",
                            Species = "Gato"
                        },
                        new
                        {
                            Id = "3",
                            AnimalState = "Disponible",
                            BirthDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Como es el bichito",
                            Name = "Bunny",
                            Species = "Conejo"
                        },
                        new
                        {
                            Id = "4",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2019, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Name = "Lola",
                            Species = "Gato",
                            UserId = "user-4"
                        },
                        new
                        {
                            Id = "5",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2017, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Como es el bichito",
                            Name = "Rex",
                            Species = "Perro",
                            UserId = "user-2"
                        },
                        new
                        {
                            Id = "6",
                            AnimalState = "Disponible",
                            BirthDate = new DateTime(2022, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Como es el bichito",
                            Name = "Coco",
                            Species = "Conejo"
                        },
                        new
                        {
                            Id = "7",
                            AnimalState = "Adoptado",
                            BirthDate = new DateTime(2016, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Como es el bichito",
                            Name = "Pepi",
                            Species = "Pajaro",
                            UserId = "user-3"
                        });
                });

            modelBuilder.Entity("Domain.House", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AddressNumber")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = "house-1",
                            Address = "Zeballos",
                            AddressNumber = 1341,
                            Capacity = 2,
                            UserId = "user-4"
                        });
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Active");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "user-1",
                            Dni = "12345678",
                            Name = "UTN",
                            Password = "123",
                            SurName = "Rosario",
                            UserName = "utn",
                            UserStatus = "Active",
                            UserType = "Admin"
                        },
                        new
                        {
                            Id = "user-2",
                            Dni = "87654321",
                            Name = "Camila",
                            Password = "123",
                            SurName = "Stella",
                            UserName = "cami",
                            UserStatus = "Active",
                            UserType = "Adoptante"
                        },
                        new
                        {
                            Id = "user-3",
                            Dni = "44180117",
                            Name = "Ignacio",
                            Password = "123",
                            SurName = "Esteves",
                            UserName = "nacho",
                            UserStatus = "Active",
                            UserType = "Voluntario"
                        },
                        new
                        {
                            Id = "user-4",
                            Dni = "11223344",
                            Name = "Nicolás",
                            Password = "123",
                            SurName = "Salerno",
                            UserName = "niko",
                            UserStatus = "Active",
                            UserType = "Transito"
                        });
                });

            modelBuilder.Entity("Domain.Animal", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.House", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
