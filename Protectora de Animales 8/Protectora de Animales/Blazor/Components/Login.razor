@using Infrastructure.API
@using DTOs
@inject SessionService Service

<h2>¡Bienvenido a Protectora Atuel!</h2>
<MudPaper Class="pa-16 ma-2" Outlined="true">
    <h3 Class="">Iniciar Sesión</h3>
<form>
    <div class="form-group">
        <label for="usernameInput">Usuario:</label>
        <input type="text" class="form-control" id="usernameInput" placeholder="Usuario" @bind="@userName" @onkeydown=@HandleKey>
    </div>
    <div class="form-group">
        <label for="passwordInput">Contraseña:</label>
        <input type="password" class="form-control" id="passwordInput" placeholder="Contraseña" @bind="@password" @onkeydown=@HandleKey>
    </div>
</form>
<button class="btn btn-primary mt-3" @onclick="@TryLogin">Ingresar</button>
</MudPaper>
<div>@status</div>
@code {
    private string userName { get; set; }
    private string password { get; set; }

    private string status { get; set; }

    private async Task HandleKey(KeyboardEventArgs e)
    {
        if (e.Key == "Enter"){
            await Task.Delay(1); //hack para evitar que el enter entre antes que el bindeo de datos
            await TryLogin();    
        }
    }
    private async Task TryLogin()
    {
        status = "Entrando...";
        AuthClient authClient = ApiClientsFactory.AuthClient();
        var res = await authClient.LoginAsync(new UserLoginRequestDTO() { UserName = userName, Password = password });
        if (!res.Success || res.Data == null)
        {
            status = res.Message;
            return;
        }
        string token = res.Data.Token;
        if (!string.IsNullOrEmpty(token))
            await Service.LoginAsync(token);

        status = "Algo terrible pasó. Vuelve a intentarlo";
    }

}
