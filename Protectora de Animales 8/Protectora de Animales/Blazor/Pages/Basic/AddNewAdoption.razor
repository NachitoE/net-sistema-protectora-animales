@page "/add-new-adoption"
@using DTOs
@inject ISnackbar Snackbar

<h3>Registrar Nueva Adopción</h3>
<MudPaper Class="pa-4" Elevation="2">
    <MudForm @ref="form">
        
        <AnimalSelector OnAnimalSelected="OnAnimalSelected" LoadMethod="AnimalSelector.AnimalClientLoadMethod.AvailableForAdopt" ShowIdAndState="@(Session.Context.IsAuthenticated && Session.Context.User.UserType == "Admin")"></AnimalSelector>
        <div class="mb-2"></div>
        <!--
        <MudDatePicker @bind-Date="adoptionRequest.AdoptionRequestDate"
                       Label="Fecha Solicitud"
                       Required="true"
                       Margin="Margin.Dense"
                       RequiredError="La fecha debe ser válida"/>
                       -->
        <MudTextField @bind-Value="adoptionRequest.Description"
                      Label="Descripción"
                      Required="true"
                      Margin="Margin.Dense"
                      RequiredError="La descripción de la adopción es obligatoria" />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="OnSubmit" Disabled="@isSubmitting">
            Registrar
        </MudButton>
    </MudForm>
</MudPaper>

@code {
    private MudForm? form;
    private AdoptionRequestDTO adoptionRequest = new AdoptionRequestDTO
    {
        AdoptionRequestDate = DateTime.Today
    };
    private bool isSubmitting = false;

    private async Task OnSubmit()
    {
        await form?.Validate();
        if (form is null || !form.IsValid || string.IsNullOrEmpty(adoptionRequest.AnimalId))
        {
            //Snackbar.Add("Los campos requeridos no están completos", Severity.Warning);
            return;
        }

        isSubmitting = true;
        var result = await ApiClientsFactory.AdoptionClient().PostAsync(adoptionRequest);
        isSubmitting = false;

        if (!result.Success)
        {
            Snackbar.Add($"Error: {result.Message}", Severity.Error);
            return;
        }
        Snackbar.Add("Adopción registrada exitosamente", Severity.Success);
        adoptionRequest = new AdoptionRequestDTO { AdoptionRequestDate = DateTime.Today };
        StateHasChanged();
    }

    private void OnAnimalSelected(AnimalDTO? animal)
    {
        adoptionRequest.AnimalId = animal != null ? animal.Id : "";
        if (form != null)
        {
            form.Validate();
            StateHasChanged();
        }
    }

}