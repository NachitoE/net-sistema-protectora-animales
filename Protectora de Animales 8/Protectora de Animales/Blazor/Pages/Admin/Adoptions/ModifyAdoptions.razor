@page "/modify-adoptions"
@using DTOs
@inject ISnackbar Snackbar

<h3>Modificar Adopciones</h3>
@if (!Session.IsAuthenticated || !(Session.Context.User.UserType == "Admin" || Session.Context.User.UserType == "Transito" || Session.Context.User.UserType == "Voluntario"))
{
    <p>No autorizado</p>
}
else if (isLoading)
{
    <MudProgressCircular Indeterminate="true" Color="Color.Secondary" Size="MudBlazor.Size.Medium" StrokeWidth="6" />
}
else if (errorMessage != null)
{
    <MudAlert Severity="Severity.Error">@errorMessage</MudAlert>
}
else
{
    <MudDataGrid Items="@elements"
                 ReadOnly="false"
                 EditMode="DataGridEditMode.Form"
                 CommittedItemChanges="@OnCommittedItemChangesHandler"
                 EditTrigger="DataGridEditTrigger.Manual"
                 Bordered="true"
                 Dense="true">
        <Columns>
            <TemplateColumn Title="Animal">
                <CellTemplate>
                    <AnimalTooltip AnimalId="@context.Item.AnimalId" />
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Usuario">
                <CellTemplate>
                    <UserTooltip UserId="@context.Item.UserId" />
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.AdoptionRequestDate" Title="Fecha Solicitud" />
            <PropertyColumn Property="x => x.AdoptionResponseDate" Title="Fecha Respuesta" />
            <PropertyColumn Property="x => x.State" Title="Estado">
                <EditTemplate>
                    <MudSelect T="string" Value="context.Item.State"
                               Required="true"
                               Margin="Margin.Dense">
                        <MudSelectItem Value="@("Pendiente")">Pendiente</MudSelectItem>
                        <MudSelectItem Value="@("Aprobada")">Aprobada</MudSelectItem>
                        <MudSelectItem Value="@("Rechazada")">Rechazada</MudSelectItem>
                    </MudSelect>
                </EditTemplate>
            </PropertyColumn>
            <PropertyColumn Property="x => x.Description" Title="Descripción" />
            <TemplateColumn CellClass="d-flex justify-end">
                <CellTemplate>
                    <MudIconButton Size="Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@context.Actions.StartEditingItemAsync" />
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
}

@code {
    private bool isLoading = true;
    private string? errorMessage = null;
    private List<AdoptionDTO> elements = new();

    protected override async Task OnInitializedAsync()
    {
        var result = await ApiClientsFactory.AdoptionClient().GetAllAsync();
        isLoading = false;
        if (!result.Success)
        {
            errorMessage = result.Message;
            return;
        }
        elements = result.Data!.ToList();
    }

    private async Task OnCommittedItemChanges(AdoptionDTO adoption)
    {
        var updateResult = await ApiClientsFactory.AdoptionClient().PutAsync(adoption.Id, adoption);
        if (!updateResult.Success)
        {
            Snackbar.Add($"Error: {updateResult.Message}", Severity.Error);
            return;
        }
        Snackbar.Add("Adopción actualizada exitosamente", Severity.Success);
    }

    private EventCallback<AdoptionDTO> OnCommittedItemChangesHandler =>
        EventCallback.Factory.Create<AdoptionDTO>(this, OnCommittedItemChanges);
}