@page "/add-new-animal"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Helpers

<h3>Añadir Nuevo Animal</h3>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success">
                <MudTextField T="string" Label="Nombre" Required="true" RequiredError="El nombre es obligatorio" @bind-Value="@formData.Name" />
                <MudDatePicker 
                    Label="Fecha de Nacimiento"
                    Required="true"
                    RequiredError="La fecha de nacimiento es obligatoria"
                    MaxDate="@DateTime.Today"
                    MinDate="@(new DateTime(1980, 1, 1))"
                               @bind-Date="formData.BirthDate" />
                <MudSelect T="string" Label="Especies" @bind-Value="@formData.Species" >
                    @foreach (var species in speciesValues)
                    {
                        <MudSelectItem Value="species">@species</MudSelectItem>
                    }
                </MudSelect>
            
            <MudTextField T="string" Label="Descripción" Required="true" RequiredError="La descripción es obligatoria" @bind-Value="@formData.Description" />
            </MudForm>
        </MudPaper>
        <MudButton OnClick="@AddAnimalAsync" Disabled="@(isLoading || (form != null && !form.IsValid))" Class="mt-5" Variant="Variant.Filled" Color="Color.Primary">Registrar Animal</MudButton>
    </MudItem>
    
</MudGrid>
@if (errorMessage != null)
{
    <MudAlert Severity="Severity.Error">@errorMessage</MudAlert>
}

@code {
    private bool success { get; set; }
    private MudForm form;
    private List<string> speciesValues => EnumValues.GetSpecies();
    private AddNewAnimalForm formData = new AddNewAnimalForm();
    private bool isLoading = false;
    private string? errorMessage = null;

    public class AddNewAnimalForm
    {
        public string Name { get; set; }
        public DateTime? BirthDate { get; set; }
        public string Species { get; set; }
        public string Description { get; set; }
    }

    private async Task AddAnimalAsync()
    {
        if (formData.BirthDate == null)
        {
            errorMessage = "Seleccione una fecha válida";
            return;
        }
        isLoading = true;
        var res = await ApiClientsFactory.AnimalClient().PostAsync(new AnimalDTO()
        {
            Name = formData.Name,
            Species = formData.Species,
            BirthDate = (DateTime)formData.BirthDate,
            Description = formData.Description

        });
        isLoading = false;
        if (!res.Success)
        {
            errorMessage = res.Message;
            return;
        }
        await form.ResetAsync();
        Snackbar.Add("Animal registrado correctamente", Severity.Success);
    }

    private void OnBirthDateChanged(DateTime value)
    {
        formData.BirthDate = value;
    }
}
