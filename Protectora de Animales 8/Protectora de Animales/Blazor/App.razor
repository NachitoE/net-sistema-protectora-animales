@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@inject SessionService Session

<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
<!-- Important: Increment the version parameter whenever you update MudBlazor to prevent caching issues -->
<link href="_content/MudBlazor/MudBlazor.min.css?v=1" rel="stylesheet" />

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
<!-- Important: Increment the version parameter whenever you update MudBlazor to prevent caching issues -->
<script src="_content/MudBlazor/MudBlazor.min.js?v=1"></script>


@code {
    /*
     * PARA AUTENTICACION EN CASCADA
     *<CascadingAuthenticationState>
     <CascadingValue Value="Session.Context" IsFixed="false">

         </CascadingValue>
</CascadingAuthenticationState>
     */
    protected override async Task OnInitializedAsync()
    {
        // reload session context
        await Session.HydrateAsync();
    }
}